@model IList<Picture>
@{
    
    int prev, cur, next;
    if (ViewBag.Position < 0)
    {
        prev = -1;
        cur = 0;
        next = 1;
    }
    else if (ViewBag.Position == 0)
    {
        prev = 0;
        cur = 1;
        next = 2;
    }
    else
    {
        prev = 0;
        cur = 1;
        next = -1;
    } 
    ViewBag.Title = Model[cur].Name;
    
}

@section scripts
{
    <script src="~/Scripts/Custom/EditMenu.js" type="text/javascript"></script>
}

@section editBlock
{
    <div class="edit-block" style="margin-top: 30px">

        <div style="float: left; margin-left: 20px">
            <a class="edit-block-item" href="@Url.Action("Album", "Albums",
                      new {ViewBag.albumName, userName = User.Identity.Name, ViewBag.searchRequest})">Back to album</a>
        </div>
        <div class="left">
            <a class="edit-block-item" href="@Url.RouteUrl("PictureScheme",
                                        new
                                        {
                                            action = "EditPicture",
                                            controller = "Pictures",
                                            pictureName = Model[cur].Name,
                                            ViewBag.albumName,
                                            ViewBag.index,
                                            ViewBag.searchRequest
                                        })">Edit Picture</a>
        </div>
        <div class="left">
            <a class="edit-block-item" id="delete" href="@Url.Action("DeletePicture", "Pictures",
                    new {pictureName = Model[cur].Name, ViewBag.albumName, ViewBag.index, ViewBag.searchRequest})">Delete Picture</a>
        </div>
    
        <div class="right">
            <a class="edit-block-item" id="manage">Manage Album</a>
        </div>

    </div>

   
}

<div class="body">

    <div class="description">
        <h2>Metadata:</h2>
        <table>
            <tr>
                <td>@Html.LabelFor(x => x[cur].Name)</td>
                <td>@Html.DisplayFor(x => x[cur].Name)</td>
            </tr>
            <tr>
                @if (Model[cur].IsPrivate)
                {
                    <td>Private</td>
                    <td><div class="checkbox-container" style="width: 15px; height: 15px"><div class="private"></div></div></td>
                }
                else
                {
                    <td>Public</td>
                    <td><div class="checkbox-container" style="width: 15px; height: 15px"><div class="public"></div></div></td>
                }
            </tr>
            <tr>
                <td>@Html.LabelFor(x => x[cur].Date)</td>
                <td>@Html.DisplayFor(x => x[cur].Date)</td>
            </tr>
            @if (Model[cur].Place != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].Place)</td>
                    <td>@Html.DisplayFor(x => x[cur].Place)</td>
                </tr>
            }
            @if (Model[cur].Model != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].Model)</td>
                    <td>@Html.DisplayFor(x => x[cur].Model)</td>
                </tr>
            }
            @if (Model[cur].FocalLength != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].FocalLength)</td>
                    <td>@Html.DisplayFor(x => x[cur].FocalLength)</td>
                </tr>
            }
            @if (Model[cur].Diaphragm != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].Diaphragm)</td>
                    <td>@Html.DisplayFor(x => x[cur].Diaphragm)</td>
                </tr>
            }
            @if (Model[cur].ShutterSpeed != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].ShutterSpeed)</td>
                    <td>@Html.DisplayFor(x => x[cur].ShutterSpeed)</td>
                </tr>
            }
            @if (Model[cur].ISO != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].ISO)</td>
                    <td>@Html.DisplayFor(x => x[cur].ISO)</td>
                </tr>
            }
            @if (Model[cur].IsFlash != null)
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].IsFlash)</td>
                    @if (Model[cur].IsFlash == true)
                    {
                        <td><div class="checkbox-container" style="width: 15px; height: 15px"><div class="public"></div></div></td>
                    }
                    else
                    {
                        <td><div class="checkbox-container" style="width: 15px; height: 15px"><div class="private"></div></div></td>
                    }
                
                </tr>
            }
            @if (!string.IsNullOrEmpty(Model[cur].Description))
            {
                <tr>
                    <td>@Html.LabelFor(x => x[cur].Description)</td>
                    <td>@Html.DisplayFor(x => x[cur].Description)</td>
                </tr>
            }
        </table>
    </div>

    <div class="image-container">
        <img class="present-image" src="@Url.Action("GetPicture", "Pictures", new { pictureId = Model[cur].Id })" />
    </div>

    <div class="navigation-button">
        
        @{
            var htmlclass = prev != -1 ? new { @class = "navigation-link" } : new { @class = "navigation-link not-active" };
            var pictureName = prev == -1 ? "" : Model[prev].Name;
        }
        @Html.RouteLink("Prev", "PictureScheme",
            new
            {
                action = "Index",
                controller = "Pictures",
                ViewBag.albumName,
                pictureName = pictureName,
                index = ViewBag.index - 1,
                ViewBag.searchRequest
            }, htmlclass)
        
        @{
            var htmlclass2 = next != -1 ? new { @class = "navigation-link", id = "right" } : new { @class = "navigation-link not-active", id = "right" };
            var pictureName2 = next == -1 ? "" : Model[next].Name;
        }

        @Html.RouteLink("Next", "PictureScheme",
            new
            {
                action = "Index",
                controller = "Pictures",
                ViewBag.albumName,
                pictureName = pictureName2,
                index = ViewBag.index + 1,
                ViewBag.searchRequest
            }, htmlclass2)
    </div>

</div>